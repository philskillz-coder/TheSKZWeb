@using TheSKZWeb.Areas.Users.Models.Administrator.Out
@model Out_ManageUserRoles
@{
    ViewData["Title"] = "Manage user Roles";
}

<div class="border p-3 mt4">
    <div class="row pb-2">
        <h2 class=text-primary>
            Manage <span class="copyText" data-name="Username" data-copydata="@("@")@Model.Username" data-doalert="true" data-generate="true"></span>&apos;s <span class="copyText" style="color: #DE3394" data-name="User Id" data-copydata="@Model.UserId" data-doalert="true" data-generate="true"></span> Roles
        </h2>
        <br />
    </div>
</div>



<div class="row pt-4">
    <div class="col-md-6">
        <div class="w-100 btn-group" role="group">
            <a type="button" asp-area="Users" asp-controller="Administrator" asp-action="ManageUser" asp-route-userId="@Model.UserId"
                class="btn btn-primary rounded ms-2 me-0 text-start" style="width: 200px">
                <i class="bi bi-caret-left"></i> &nbsp; Back to overview
            </a>
        </div>
    </div>
</div>
<br />

<div>
    <h4>Roles</h4>
    <div id="granted-roles">
        @foreach (_Role role in Model.Roles)
        {
            <div id="role-@role.RoleId">
                <div class="row pt-4">
                    <div class="col-md-6">
                        <div class="form-outline">
                            <input type="text" class="form-control" pattern=".{3,21}" placeholder="@role.Name" spellcheck="false" readonly/>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <button type="button" id="role-@role.RoleId-delete" class="btn btn-primary text-center delpem" style="width: 50px" data-rid="@role.RoleId" data-rname="@role.Name" onclick="revokeRole(this)">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
    

    <div class="row pt-4">
        <div class="col-md-6">
            <div class="form-outline">
                <input type="text" id="grant-role" class="form-control" pattern=".{3,21}" spellcheck="false" placeholder="..."/>
            </div>
        </div>
        <div class="col-md-6">
            <button type="button" id="role-new-create" class="btn btn-primary text-center addpem" style="width: 50px" onclick="grantRole(this)">
                <i class="bi bi-plus-square"></i>
            </button>
        </div>
    </div>
</div>


<partial name="_MFAPromptPartial"></partial>

@section PartialScripts {
    <!-- mfa script -->
    <script src="~/js/_mfa.js" asp-append-version="true"></script>
    <!-- end mfa script -->
}

@section Scripts {
    <script>
        var r_input = document.getElementById("grant-role");
        var granted_roles = document.getElementById("granted-roles")

        async function grantRole(btndata) {
            await advancedPost(
                "grant",
                {
                    "RoleName": r_input.value
                },
                {
                    "onSuccess": async (data) => {
                        var gRole = document.createElement("div");
                        gRole.id = "role-" + data["RID"];

                        var grRow = document.createElement("div");
                        grRow.classList.add("row", "pt-4");

                        var grrC1 = document.createElement("div");
                        grrC1.classList.add("col-md-6");

                        var grrc1F = document.createElement("div");
                        grrc1F.classList.add("form-outline");

                        var grrc1fI = document.createElement("input");
                        grrc1fI.type = "text";
                        grrc1fI.classList.add("form-control");
                        grrc1fI.pattern = ".{3,21}";
                        grrc1fI.placeholder = r_input.value;
                        grrc1fI.readOnly = true;


                
                        var grrC2 = document.createElement("div");
                        grrC2.classList.add("col-md-6");

                        var grrc2B = document.createElement("button");
                        grrc2B.type = "button";
                        grrc2B.id = "role-" + data["RID"] + "-delete";
                        grrc2B.classList.add("btn", "btn-primary", "text-center", "delpem");
                        grrc2B.style = "width: 50px";
                        grrc2B.dataset.rid = data["RID"];
                        grrc2B.dataset.rname = r_input.value;
                        grrc2B.onmousedown = "revokeRole(this)";

                        var grrc2bI = document.createElement("i");
                        grrc2bI.classList.add("bi", "bi-trash");

                        r_input.value = "";


                        grrc1F.appendChild(grrc1fI);
                        grrC1.appendChild(grrc1F);

                        grrc2B.appendChild(grrc2bI);
                        grrC2.appendChild(grrc2B);

                        grRow.appendChild(grrC1);
                        grRow.appendChild(grrC2);

                        gRole.appendChild(grRow);

                        granted_roles.appendChild(gRole);
                    }
                }
            );
        }

        async function revokeRole(btndata) {
            await advancedPost(
                "revoke",
                {
                    "RID": btndata.dataset.rid
                },
                {
                    "mfa": true,
                    "onSuccess": async (data) => {
                        document.getElementById("role-" + btndata.dataset.rid).remove();
                    }
                }
            );
        }
    </script>
}